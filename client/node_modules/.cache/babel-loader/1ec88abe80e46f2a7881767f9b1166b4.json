{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector to create small slice of state object\n\nconst selectCart = state => state.cart; //requires two arguments\n\n\nexport const selectCartItems = createSelector( //first argument is an array/collection of selectors\n//can be any type of selector, either the input selector above, or an output selector like this one\n[selectCart], //second argument is a function that returns the value we want from selector\n//can take multiple selectors\n//must order the arguments in the same order as they are in the array above\ncart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EAC3C;AACA;AACA,CAACC,UAAD,CAH2C,EAI3C;AACA;AACA;AACCE,IAAD,IAAUA,IAAI,CAACE,SAP4B,CAAtC;AAUP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACPA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAHuC,CAA3C","sourcesContent":["import { createSelector } from 'reselect';\n\n//input selector to create small slice of state object\nconst selectCart = state => state.cart;\n\n//requires two arguments\nexport const selectCartItems = createSelector(\n  //first argument is an array/collection of selectors\n  //can be any type of selector, either the input selector above, or an output selector like this one\n  [selectCart],\n  //second argument is a function that returns the value we want from selector\n  //can take multiple selectors\n  //must order the arguments in the same order as they are in the array above\n  (cart) => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n         [selectCartItems],\n         cartItems =>\n           cartItems.reduce(\n             (accumulatedQuantity, cartItem) =>\n               accumulatedQuantity + cartItem.quantity,\n             0\n           )\n       );"]},"metadata":{},"sourceType":"module"}