{"ast":null,"code":"var _jsxFileName = \"/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onclick: () => history.push,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //all higher order components return component and can take components as arguments\n//order matters when a component is used as an argument because the function will evaulate from inside-out\n//i.e. first connected component comes out, which then gets passed to router\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEID,SAAS,CAACE,MAAV,GACAF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IACtB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADA,GAKF;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CADF,EAWE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CADF;;AAgBA,MAAMC,eAAe,GAAGb,wBAAwB,CAAE;AAChDM,EAAAA,SAAS,EAAEF;AADqC,CAAF,CAAhD,C,CAIA;AACA;AACA;;AACA,eAAeH,UAAU,CAACF,OAAO,CAACc,eAAD,CAAP,CAAyBR,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {\n        cartItems.length ?\n        cartItems.map(cartItem => (\n        <CartItem key={cartItem.id} item={cartItem} />\n      ))\n      :\n      <span className='empty-message'>Your cart is empty</span>\n      }\n    </div>\n    <CustomButton onclick={() => history.push } >GO TO CHECKOUT</CustomButton>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector ({\n  cartItems: selectCartItems\n});\n\n//all higher order components return component and can take components as arguments\n//order matters when a component is used as an argument because the function will evaulate from inside-out\n//i.e. first connected component comes out, which then gets passed to router\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}