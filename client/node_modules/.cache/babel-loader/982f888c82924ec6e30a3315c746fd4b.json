{"ast":null,"code":"import _defineProperty from \"/home/wihas/Documents/Projects/udemyReact/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyC2CsP-8P6Ut-fc1TTRVFQVqkpsScO9i2M\",\n  authDomain: \"crwn-db-b0e3b.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-b0e3b.firebaseio.com\",\n  projectId: \"crwn-db-b0e3b\",\n  storageBucket: \"crwn-db-b0e3b.appspot.com\",\n  messagingSenderId: \"9507927179\",\n  appId: \"1:9507927179:web:c3a8ac4126fe6ec877508e\"\n};\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additonalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach();\n};\nfirebase.initializeApp(config); //export firebase function methods\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //create google authentication utility from auth library\n\nconst provider = new firebase.auth.GoogleAuthProvider(); //trigger google pop up whenever we use google auth provider\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); //we specify that we want the google pop up, no others\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additonalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,YANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AAAA,UACXC,WADW,GACYT,QADZ,CACXS,WADW;AAAA,UACEC,KADF,GACYV,QADZ,CACEU,KADF;AAEnB,UAAMC,SAAS,GAAI,IAAIC,IAAJ,EAAnB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,aAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMgB,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb;AACD,CALM;AAOPlC,QAAQ,CAACmC,aAAT,CAAuBlC,MAAvB,E,CAEA;;AACA,OAAO,MAAMmC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB,C,CAEP;;AACA,MAAMwB,QAAQ,GAAG,IAAIrC,QAAQ,CAACoC,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAI,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAhC;AAEP,eAAerC,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyC2CsP-8P6Ut-fc1TTRVFQVqkpsScO9i2M\",\n  authDomain: \"crwn-db-b0e3b.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-b0e3b.firebaseio.com\",\n  projectId: \"crwn-db-b0e3b\",\n  storageBucket: \"crwn-db-b0e3b.appspot.com\",\n  messagingSenderId: \"9507927179\",\n  appId: \"1:9507927179:web:c3a8ac4126fe6ec877508e\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if(!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt =  new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additonalData\n      })\n    } catch (error) {\n      console.log('error creating user', error.message)\n    }\n  }\n\n  return userRef;\n}\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach()\n};\n\nfirebase.initializeApp(config);\n\n//export firebase function methods\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//create google authentication utility from auth library\nconst provider = new firebase.auth.GoogleAuthProvider();\n//trigger google pop up whenever we use google auth provider\nprovider.setCustomParameters({ prompt: 'select_account' })\n//we specify that we want the google pop up, no others\nexport const signInWithGoogle  = () => auth.signInWithPopup(provider)\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}