{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am awesome');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get(); // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  // });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,uBAAT,QAAyC,gBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAJuC,CAOvC;AACA;AACA;AACA;AACD;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMZ,SAAS,CACbI,eAAe,CAACS,uBADH,EAEbR,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, } from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am awesome');\n\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  \n\n  // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  // });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}"]},"metadata":{},"sourceType":"module"}