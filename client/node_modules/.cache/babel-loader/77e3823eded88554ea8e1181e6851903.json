{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; //tells redux-persist that we're going to use local storage\n//session storage would be sessionStorage\n\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  //an array containing string names of any reducers that you want to store\n  whitelist: ['cart']\n}; //set combineReducers to a variable so that we can wrap the reducers in the persist object\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,IAA7B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA,OAFoB;AAGpB;AACAM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAJS,CAAtB,C,CAOA;;AACA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,IAAI,EAAEP;AAF4B,CAAD,CAAnC;AAKA,eAAeH,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\n//tells redux-persist that we're going to use local storage\n//session storage would be sessionStorage\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  //an array containing string names of any reducers that you want to store\n  whitelist: ['cart']\n}\n\n//set combineReducers to a variable so that we can wrap the reducers in the persist object\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}