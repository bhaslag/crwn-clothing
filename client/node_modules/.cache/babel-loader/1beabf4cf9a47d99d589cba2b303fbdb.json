{"ast":null,"code":"var _jsxFileName = \"/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss'; //the disptach action gets passed to state by default if no second dispatch argument is passed to the connect function\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})); // const mapStateToProps = createStructuredSelector ({\n//   cartItems: [selectCartItems]\n// });\n//all higher order components return component and can take components as arguments\n//order matters when a component is used as an argument because the function will evaulate from inside-out\n//i.e. first connected component comes out, which then gets passed to router\n// export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/wihas/Documents/Projects/udemyReact/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,6BAAP,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,C,CAuBA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport './cart-dropdown.styles.scss';\n\n//the disptach action gets passed to state by default if no second dispatch argument is passed to the connect function\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {/* {\n        cartItems.length ?\n        cartItems.map(cartItem => (\n        <CartItem key={cartItem.id} item={cartItem} />\n      ))\n      :\n      <span className='empty-message'>Your cart is empty</span>\n      } */}\n    </div>\n    {/* <CustomButton \n    onClick={() => { \n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    }}\n    >\n      GO TO CHECKOUT\n    </CustomButton> */}\n  </div>\n);\n\n// const mapStateToProps = createStructuredSelector ({\n//   cartItems: [selectCartItems]\n// });\n\n//all higher order components return component and can take components as arguments\n//order matters when a component is used as an argument because the function will evaulate from inside-out\n//i.e. first connected component comes out, which then gets passed to router\n// export default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}